/*
 * This file is generated by jOOQ.
 */
package com.liubomyr.voucher.database.schema.tables;


import com.liubomyr.voucher.database.schema.Keys;
import com.liubomyr.voucher.database.schema.VoucherAgency;
import com.liubomyr.voucher.database.schema.tables.records.VoucherRecord;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Voucher extends TableImpl<VoucherRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>voucher_agency.voucher</code>
     */
    public static final Voucher VOUCHER = new Voucher();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VoucherRecord> getRecordType() {
        return VoucherRecord.class;
    }

    /**
     * The column <code>voucher_agency.voucher.VOUCHER_ID</code>.
     */
    public final TableField<VoucherRecord, Integer> VOUCHER_ID = createField(DSL.name("VOUCHER_ID"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>voucher_agency.voucher.CUSTOMER_ID</code>.
     */
    public final TableField<VoucherRecord, Integer> CUSTOMER_ID = createField(DSL.name("CUSTOMER_ID"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>voucher_agency.voucher.TYPE</code>.
     */
    public final TableField<VoucherRecord, Integer> TYPE = createField(DSL.name("TYPE"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>voucher_agency.voucher.ARRIVAL</code>.
     */
    public final TableField<VoucherRecord, LocalDate> ARRIVAL = createField(DSL.name("ARRIVAL"), SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>voucher_agency.voucher.DEPARTURE</code>.
     */
    public final TableField<VoucherRecord, LocalDate> DEPARTURE = createField(DSL.name("DEPARTURE"), SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>voucher_agency.voucher.HOTEL</code>.
     */
    public final TableField<VoucherRecord, String> HOTEL = createField(DSL.name("HOTEL"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>voucher_agency.voucher.COUNTRY</code>.
     */
    public final TableField<VoucherRecord, String> COUNTRY = createField(DSL.name("COUNTRY"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>voucher_agency.voucher.NUTRITION</code>.
     */
    public final TableField<VoucherRecord, Integer> NUTRITION = createField(DSL.name("NUTRITION"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>voucher_agency.voucher.TRANSPORT</code>.
     */
    public final TableField<VoucherRecord, Integer> TRANSPORT = createField(DSL.name("TRANSPORT"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>voucher_agency.voucher.PAYMENT</code>.
     */
    public final TableField<VoucherRecord, Integer> PAYMENT = createField(DSL.name("PAYMENT"), SQLDataType.INTEGER.nullable(false), this, "");

    private Voucher(Name alias, Table<VoucherRecord> aliased) {
        this(alias, aliased, null);
    }

    private Voucher(Name alias, Table<VoucherRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>voucher_agency.voucher</code> table reference
     */
    public Voucher(String alias) {
        this(DSL.name(alias), VOUCHER);
    }

    /**
     * Create an aliased <code>voucher_agency.voucher</code> table reference
     */
    public Voucher(Name alias) {
        this(alias, VOUCHER);
    }

    /**
     * Create a <code>voucher_agency.voucher</code> table reference
     */
    public Voucher() {
        this(DSL.name("voucher"), null);
    }

    public <O extends Record> Voucher(Table<O> child, ForeignKey<O, VoucherRecord> key) {
        super(child, key, VOUCHER);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : VoucherAgency.VOUCHER_AGENCY;
    }

    @Override
    public Identity<VoucherRecord, Integer> getIdentity() {
        return (Identity<VoucherRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<VoucherRecord> getPrimaryKey() {
        return Keys.KEY_VOUCHER_PRIMARY;
    }

    @Override
    public List<ForeignKey<VoucherRecord, ?>> getReferences() {
        return Arrays.asList(Keys.CUSTOMER_ID, Keys.TYPE, Keys.NUTRITION, Keys.TRANSPORT, Keys.PAYMENT);
    }

    private transient Customer _customer;
    private transient Type _type;
    private transient Nutrition _nutrition;
    private transient Transport _transport;
    private transient Currency _currency;

    public Customer customer() {
        if (_customer == null)
            _customer = new Customer(this, Keys.CUSTOMER_ID);

        return _customer;
    }

    public Type type() {
        if (_type == null)
            _type = new Type(this, Keys.TYPE);

        return _type;
    }

    public Nutrition nutrition() {
        if (_nutrition == null)
            _nutrition = new Nutrition(this, Keys.NUTRITION);

        return _nutrition;
    }

    public Transport transport() {
        if (_transport == null)
            _transport = new Transport(this, Keys.TRANSPORT);

        return _transport;
    }

    public Currency currency() {
        if (_currency == null)
            _currency = new Currency(this, Keys.PAYMENT);

        return _currency;
    }

    @Override
    public Voucher as(String alias) {
        return new Voucher(DSL.name(alias), this);
    }

    @Override
    public Voucher as(Name alias) {
        return new Voucher(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Voucher rename(String name) {
        return new Voucher(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Voucher rename(Name name) {
        return new Voucher(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, Integer, Integer, LocalDate, LocalDate, String, String, Integer, Integer, Integer> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
